apply plugin: 'maven-publish'

publishing {
    repositories {
        /*mavenLocal {
            *//*pom.groupId = 'com.jieba'
            pom.artifactId = ""
            pom.version = "1.0.0"
            pom.packaging = 'aar'*//*
            setUrl(uri("${rootProject.projectDir}/jieba"))
        }*/
        maven {
            credentials {
                username "1271830912@QQ.COM"
                password "CHSHP123"
            }
            url = "https://gitee.com/chshp123/jieba_android.git"
        }
    }
//    /Users/dongdaqing/StudioProjects/MyNew
    publications {
        aar(MavenPublication) {
            afterEvaluate {
                if (file("$buildDir/outputs/aar/${project.getName()}-release.aar").exists())
                    artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
                else if (file("$buildDir/libs/${project.getName()}.jar").exists())
                    artifact("$buildDir/libs/${project.getName()}.jar")
            }

            setGroupId("com.jieba")
            setArtifactId(project.name)
            setVersion("1.0.0")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                // Iterate over the implementation dependencies (we don't want the test ones),
                // adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

//以下代码会生成jar包源文件，如果是不开源码，请不要输入这段
//aar包内包含注释
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar
}